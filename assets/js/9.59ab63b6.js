(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{553:function(s,t,a){s.exports=a.p+"assets/img/1-10.40971989.png"},554:function(s,t,a){s.exports=a.p+"assets/img/2-7.c971e0c2.png"},555:function(s,t,a){s.exports=a.p+"assets/img/3-7.7a68b682.png"},556:function(s,t,a){s.exports=a.p+"assets/img/4-4.62c3c85c.png"},557:function(s,t,a){s.exports=a.p+"assets/img/5-4.5c1741c5.png"},558:function(s,t,a){s.exports=a.p+"assets/img/6-4.7ed691e9.png"},559:function(s,t,a){s.exports=a.p+"assets/img/7-3.84633c15.png"},560:function(s,t,a){s.exports=a.p+"assets/img/8-2.166f39cb.png"},561:function(s,t,a){s.exports=a.p+"assets/img/9-2.1bd22d65.png"},562:function(s,t,a){s.exports=a.p+"assets/img/10-2.e9599b89.png"},624:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"详解-es6-modules"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#详解-es6-modules"}},[s._v("#")]),s._v(" 详解 ES6 Modules")]),s._v(" "),n("p",[s._v("对于新人朋友来说，想要自己去搞定一个 ES6 开发环境并不是一件容易的事情，因为构建工具的学习本身又是一个非常大的方向，我们需要花费不少的时间才能掌握它。")]),s._v(" "),n("p",[s._v("好在慢慢的开始有大神提供了一些非常简单易懂，学习成本非常低的解决方案来帮助大家学习。create-react-app 就是这些解决方案中，个人认为最简单易懂的一种方式。")]),s._v(" "),n("p",[s._v("所以在学习 ES6 modules 之前，先跟大家介绍一下 create-react-app 的安装与使用。")]),s._v(" "),n("p",[s._v("尽管 create-react-app 的目的是用于开发 react 程序，但是我们仅仅只用来学习 ES6 是再合适不过了。当然你也可以借助 vue-cli 来学习，同样十分简单。")]),s._v(" "),n("p",[s._v("1、确保自己的本地环境已经安装了 node 与 npm\n通常安装的方式就是去 node 的官方网站下载安装，在安装 node 的时候，npm 也会一起被安装。")]),s._v(" "),n("p",[s._v("下载地址： http://nodejs.cn/download/")]),s._v(" "),n("p",[s._v("2、安装一个好用的命令行工具\n在 windows 环境下，系统默认的 cmd 非常难用，所以我个人比较推荐大家使用 git.bash 或者 cmder。")]),s._v(" "),n("p",[s._v("git 下载地址： https://git-scm.com/downloads\n在 git 安装目录下会有一个 bash 工具，找到安装目录直接使用即可。")]),s._v(" "),n("p",[s._v("cmder 下载地址： http://cmder.net/")]),s._v(" "),n("p",[s._v("在 mac 上就方便很多了，你可以直接使用系统自带的 terminal 工具，就非常好用。但是一般我推荐大家使用 iterm2，并安装 oh my zsh 插件。具体的配置大家可以自己去折腾，网上的教程应该足够帮助你搞定这一切了。")]),s._v(" "),n("p",[s._v("iterm2 下载地址 http://www.iterm2.com/downloads.html\noh my zsh 主题选择 https://github.com/robbyrussell/oh-my-zsh/wiki/External-themes")]),s._v(" "),n("p",[n("img",{attrs:{src:a(553),alt:""}})]),s._v(" "),n("p",[s._v("另外还强烈推荐一款超高颜值的终端工具 hyperTerm。")]),s._v(" "),n("p",[s._v("这款工具的特色就是颜值高，第一感觉就是惊艳，大家不妨一试。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(554),alt:""}})]),s._v(" "),n("p",[s._v("hyperTerm 下载地址 https://hyper.is/\n3、安装 create-react-app\n在命令行工具中使用查看版本的方式确保 node 与 npm 都安装好之后，我们就可以安装 create-react-app 了。")]),s._v(" "),n("blockquote",[n("p",[s._v("node -v\n// 输出 node 版本号")])]),s._v(" "),n("blockquote",[n("p",[s._v("npm -v\n// 输出 npm 版本号\nNode\n使用 npm 全局安装 create-react-app")])]),s._v(" "),n("blockquote",[n("p",[s._v("npm install create-react-app -g\nNode\n然后我们就可以使用 create-react-app 来创建我们的第一个项目。")])]),s._v(" "),n("p",[s._v("找到一个你要存放项目的根目录，假设叫做 develop，运行以下指令。")]),s._v(" "),n("blockquote",[n("p",[s._v("create-react-app es6app\nNode\ncreate-react-app 会自动帮助我们在 develop 目录下创建一个叫做 es6app 的文件夹，这就是我们新创建的项目。")])]),s._v(" "),n("p",[s._v("当项目创建完成之后，在命令行工具中，我们会看到如图所示的提示。这些提示告诉了我们如何运行项目 npm start ，如何打包项目 npm run build 等，这里我就不再赘述。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(555),alt:""}})]),s._v(" "),n("p",[s._v("项目创建完毕之后，进入该文件夹。")]),s._v(" "),n("blockquote",[n("p",[s._v("cd es6app")])]),s._v(" "),n("p",[s._v("// 查看文件夹里的内容")]),s._v(" "),n("blockquote",[n("p",[s._v("ls\nNode\n我们会发现里面有一个叫做 package.json 的文件，这个文件里包含了项目所需要的所有依赖。当我们第一次运行项目之前，还需要安装该文件里的依赖包。")])]),s._v(" "),n("blockquote",[n("p",[s._v("npm install\nNode\n安装完毕之后，我们就可以启动该项目了。")])]),s._v(" "),n("blockquote",[n("p",[s._v("npm start\nNode")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(556),alt:""}})]),s._v(" "),n("p",[s._v("一般来说，启动之后会自动在浏览器中打开。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(557),alt:""}})]),s._v(" "),n("p",[s._v("create-react-app 已经自动帮助我们实现了热更新，因此当我们修改代码时，浏览器会自动更新。当然，如果我们仅仅只是修改页面样式时，热更新将会非常方便，但是如果你正在进行单页面的组件开发，可能热更新能够提供的帮助非常有限。")]),s._v(" "),n("p",[s._v("4、认识项目\n只要我们按照构建工具的规则进行开发，那么构建工具会自动帮助我们将代码进行整合，因此在该项目中开发时，我们并不需要自己来使用 script 或者 link 标签来引入 js 与 css，所以认识 create-react-app 的规则就变得很重要。")]),s._v(" "),n("p",[s._v("初次创建的项目下，会有 3 个文件夹。")]),s._v(" "),n("p",[s._v("node_modules\n项目依赖包存放位置。当我们运行 npm install 安装 package.json 中的依赖包时，该文件夹会自动创建，所有的依赖包会安装到该文件夹里。\npublic\n主要的作用是 html 入口文件的存放。当然我们也可以存放其他公用的静态资源，如 img，css 等。其中的 index.html 就是我们项目的入口 html 文件")]),s._v(" "),n("p",[s._v("src\n组件的存放目录。在 create-react-app 创建的项目中，每一个单独的文件都可以被看成一个单独的模块，单独的 image，单独的 css，单独 js 等，而所有的组件都存放于 src 目录中，其中 index.js 则是 js 的入口文件。虽然我们并没有在 index.html 中使用 script 标签引入他，但是他的作用就和此一样。")]),s._v(" "),n("p",[s._v("当然，如果我们要进一步进行 react 的学习，那么肯定需要了解多一点的规则，但是在学习 react 之前，我们还是先把 ES6 modules 的知识搞定在说吧，所以，接下来你要做的事情就是，删掉 src 目录里的除了 index.js 之外的所有文件，并清空 index.js，我们从 0 开始学习 ES6 modules。")]),s._v(" "),n("p",[s._v("为了确保程序仍然能够正常运行，我们在 index.js 中随便写点代码测试一下")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" app "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("querySelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#root"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("innerHTML "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"啊，全部被清空啦，准备工作终于做完了，可以开始学习 ES6 啦"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("img",{attrs:{src:a(558),alt:""}})]),s._v(" "),n("p",[s._v("那么我们就可以在这个环境下学习 ES6 的所有知识了，当然也包括 ES6 modules。")]),s._v(" "),n("p",[s._v("ES6 modules")]),s._v(" "),n("ol",[n("li",[s._v("引入模块\n首先在 src 目录下创建一个 test.js，在 test.js 中我们随便干点什么简单的事情即可。")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/test.js")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your first module"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("在 index.js 中通过 import 引入 test.js，这是我们要学会的第一个语法")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/index.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" test "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./test"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("import 表示引入一个模块，\ntest 我们暂时理解为引入模块的名字，\nfrom 表示从哪里引入\n./test 为./test.js 的简写，表示将要引入模块的路径")]),s._v(" "),n("p",[n("img",{attrs:{src:a(559),alt:""}})]),s._v(" "),n("p",[s._v("引入这个动作执行时，test.js 中的代码也执行了。由于在 test.js 中并没有对外暴露任何接口，因此 index.js 中的 test 为一个空对象，那么对外暴露接口的方式，则是我们要学习的第二个语法。")]),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[s._v("对外提供接口\nES6 modules 使用 export 关键字对外提供接口，在我们刚才创建的 test.js 中，我们添加如下代码")])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// test.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  a"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("b")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("foo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  foo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[n("img",{attrs:{src:a(560),alt:""}})]),s._v(" "),n("p",[s._v("在 test.js 中，我们使用 export default 对包暴露了一个对象。他的意思就是当我们使用 import test from ‘./test’时，这个 test 对象就默认等于 export default 暴露的对象。")]),s._v(" "),n("p",[s._v("我们还可以在 test.js 中，仅仅通过 export 暴露几个方法与属性，我们来看看 index.js 中 test 会变成什么样子。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/test.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("bar")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" zcar "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("保存运行后，我们发现，index.js 中的 test 对象并没有变化，因为它仅仅等于 export default 抛出的对象，因此，为了获得模块 test.js 暴露的所有接口，我们得通过如下的方式。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/index.js")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" _ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" test "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("其中的 _ 表示所有，这是比较常用的通配符，as 表示别名，* as test 的意思是将 test.js 暴露的所有接口组成的对象，命名为 test。那么我们在 index.js 中 log 出 test，结果就如下。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(561),alt:""}})]),s._v(" "),n("p",[s._v("如果大家还记得前面一篇文章里，我所讲的 ES6 解析结构的语法，那么对于如下的用法相信就不难理解。")]),s._v(" "),n("p",[s._v("// src/index.js\nimport test, { bar, zcar } from './test';")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zcar:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" zcar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("test，仍然表示为 export default 暴露的对象，而 { bar, zcar }则表示利用解析结构的语法，从整个返回对象中去取得对应的接口。输出结果也就很清晰了。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(562),alt:""}})]),s._v(" "),n("p",[s._v("这种方式还是比较常见，比如我们在使用 react 时，常常这样使用：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Component "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"react"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("它其实暗示了 React 的封装方式，也暗示了我们应该如何去封装我们的模块。")]),s._v(" "),n("p",[s._v("这里我们能够直接引入 react 的原因，是因为我们将它安装到了文件夹 node_modules 中，该文件夹中安装的所有模块都可以这样直接引用。例如我们安装一个 jquery。")]),s._v(" "),n("p",[s._v("// 安装 jquery")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" npm install jquery\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" JavaScript\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 然后在其他模块中就可以直接引入\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" $ "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jquery"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这样，我们可以和往常一样使用 jquery。\n通过这样方式，我们还可以扩展更多的库，这就使得我们这个开发环境不仅仅能够用于 react 的开发，怎么用，完全取决与你自己。")]),s._v(" "),n("p",[s._v("OK，ES6 模块的基础语法大概就这些吧，他告诉了我们在 ES6 中，一个模块应该如何对外暴露接口与如何引入其他模块暴露的接口，这个知识点在实际开发中非常常用，因此虽然简单，但是不得不掌握，这也是大家进一步学习 react 或者 vue 的基础，主要的难点大概在于本地开发环境的折腾，如果你是初次折腾这些，可能会遇到一些小问题，所以一定要有一点耐心。")]),s._v(" "),n("p",[s._v("通常来说，一个知识点，在完全理解之前还是有点难度的，但是理解之后就变得非常简单，所以如果你在学习这个知识点时感觉有点困难，也不要过于担心，多多动手尝试，并在实践中运用起来，相信很快就能掌握。")])])}),[],!1,null,null,null);t.default=e.exports}}]);